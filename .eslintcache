[{"D:\\myProject\\cvonline.com\\React\\src\\index.js":"1","D:\\myProject\\cvonline.com\\React\\src\\App.js":"2","D:\\myProject\\cvonline.com\\React\\src\\hoc\\IntlProviderWrapper.js":"3","D:\\myProject\\cvonline.com\\React\\src\\config\\redux.js":"4","D:\\myProject\\cvonline.com\\React\\src\\components\\GlobalStyles\\GlobalStyles.js":"5","D:\\myProject\\cvonline.com\\React\\src\\reportWebVitals.js":"6","D:\\myProject\\cvonline.com\\React\\src\\hoc\\authentication.js":"7","D:\\myProject\\cvonline.com\\React\\src\\routes\\routes.js":"8","D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\rootReducer.js":"9","D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\appReducer.js":"10","D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\userReducer.js":"11","D:\\myProject\\cvonline.com\\React\\src\\utils\\index.js":"12","D:\\myProject\\cvonline.com\\React\\src\\layouts\\index.js":"13","D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\actionNames.js":"14","D:\\myProject\\cvonline.com\\React\\src\\utils\\constants.js":"15","D:\\myProject\\cvonline.com\\React\\src\\utils\\LanguageUtils.js":"16","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\PersonalLayout.js":"17","D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\AuthLayout.js":"18","D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\Images.js":"19","D:\\myProject\\cvonline.com\\React\\src\\components\\Toast\\Toast.js":"20","D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\ChangeImageModal.js":"21","D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\Image.js":"22","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\ContentEditableTag.js":"23","D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\Loading.js":"24","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\Product.js":"25","D:\\myProject\\cvonline.com\\React\\src\\components\\Button\\Button.js":"26","D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\Signup.js":"27","D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\Signin.js":"28","D:\\myProject\\cvonline.com\\React\\src\\containers\\Header\\Header.js":"29","D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\Modal.js":"30","D:\\myProject\\cvonline.com\\React\\src\\utils\\CommonUtils.js":"31","D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\FacebookGoogle.js":"32","D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\userActions.js":"33","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\TechnologyList.js":"34","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\EditProduct.js":"35","D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\CropImage\\CropImage.js":"36","D:\\myProject\\cvonline.com\\React\\src\\containers\\Header\\SearchBar.js":"37","D:\\myProject\\cvonline.com\\React\\src\\components\\formValidation\\formValidation.js":"38","D:\\myProject\\cvonline.com\\React\\src\\components\\Popover\\Menu\\Menu.js":"39","D:\\myProject\\cvonline.com\\React\\src\\components\\Popover\\Menu\\MenuData.js":"40","D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\index.js":"41","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\CreateEditTechnology.js":"42","D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\CropImage\\getCroppedImg.js":"43","D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\Technology.js":"44","D:\\myProject\\cvonline.com\\React\\src\\services\\index.js":"45","D:\\myProject\\cvonline.com\\React\\src\\components\\Button\\EditButton.js":"46","D:\\myProject\\cvonline.com\\React\\src\\services\\userService.js":"47","D:\\myProject\\cvonline.com\\React\\src\\config\\axios.js":"48"},{"size":1179,"mtime":1684496624694,"results":"49","hashOfConfig":"50"},{"size":1521,"mtime":1688737040793,"results":"51","hashOfConfig":"50"},{"size":1088,"mtime":1688726759948,"results":"52","hashOfConfig":"50"},{"size":1027,"mtime":1688725937326,"results":"53","hashOfConfig":"50"},{"size":224,"mtime":1686059908823,"results":"54","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"50"},{"size":737,"mtime":1683117359773,"results":"56","hashOfConfig":"50"},{"size":469,"mtime":1687606680239,"results":"57","hashOfConfig":"50"},{"size":976,"mtime":1687364424452,"results":"58","hashOfConfig":"50"},{"size":928,"mtime":1682331171383,"results":"59","hashOfConfig":"50"},{"size":3372,"mtime":1688350744947,"results":"60","hashOfConfig":"50"},{"size":91,"mtime":1682342753489,"results":"61","hashOfConfig":"50"},{"size":144,"mtime":1685002942902,"results":"62","hashOfConfig":"50"},{"size":1134,"mtime":1687947944129,"results":"63","hashOfConfig":"50"},{"size":263,"mtime":1684814490052,"results":"64","hashOfConfig":"50"},{"size":957,"mtime":1682343146469,"results":"65","hashOfConfig":"50"},{"size":25980,"mtime":1688626236024,"results":"66","hashOfConfig":"50"},{"size":815,"mtime":1688696570984,"results":"67","hashOfConfig":"50"},{"size":250,"mtime":1688369023379,"results":"68","hashOfConfig":"50"},{"size":1462,"mtime":1688352502403,"results":"69","hashOfConfig":"50"},{"size":3909,"mtime":1688716164939,"results":"70","hashOfConfig":"50"},{"size":1475,"mtime":1686023265941,"results":"71","hashOfConfig":"50"},{"size":1247,"mtime":1688379529089,"results":"72","hashOfConfig":"50"},{"size":580,"mtime":1688306360448,"results":"73","hashOfConfig":"50"},{"size":37692,"mtime":1688709061530,"results":"74","hashOfConfig":"50"},{"size":2070,"mtime":1688107090283,"results":"75","hashOfConfig":"50"},{"size":9889,"mtime":1688726478694,"results":"76","hashOfConfig":"50"},{"size":7304,"mtime":1688726470890,"results":"77","hashOfConfig":"50"},{"size":4704,"mtime":1688720498319,"results":"78","hashOfConfig":"50"},{"size":1500,"mtime":1688711130437,"results":"79","hashOfConfig":"50"},{"size":358,"mtime":1686229703872,"results":"80","hashOfConfig":"50"},{"size":902,"mtime":1683220741171,"results":"81","hashOfConfig":"50"},{"size":9063,"mtime":1688473825660,"results":"82","hashOfConfig":"50"},{"size":10048,"mtime":1688609223629,"results":"83","hashOfConfig":"50"},{"size":1793,"mtime":1688537358034,"results":"84","hashOfConfig":"50"},{"size":4757,"mtime":1688716050934,"results":"85","hashOfConfig":"50"},{"size":8169,"mtime":1688723789672,"results":"86","hashOfConfig":"50"},{"size":6499,"mtime":1683214793979,"results":"87","hashOfConfig":"50"},{"size":4315,"mtime":1688381410845,"results":"88","hashOfConfig":"50"},{"size":1190,"mtime":1688367671144,"results":"89","hashOfConfig":"50"},{"size":35,"mtime":1684381571546,"results":"90","hashOfConfig":"50"},{"size":8029,"mtime":1688370871345,"results":"91","hashOfConfig":"50"},{"size":2768,"mtime":1687069484408,"results":"92","hashOfConfig":"50"},{"size":8263,"mtime":1688452126207,"results":"93","hashOfConfig":"50"},{"size":35,"mtime":1682481695558,"results":"94","hashOfConfig":"50"},{"size":3229,"mtime":1688136897450,"results":"95","hashOfConfig":"50"},{"size":1895,"mtime":1688361625974,"results":"96","hashOfConfig":"50"},{"size":254,"mtime":1686294078493,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"15f660q",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\myProject\\cvonline.com\\React\\src\\index.js",[],["199","200"],"D:\\myProject\\cvonline.com\\React\\src\\App.js",[],"D:\\myProject\\cvonline.com\\React\\src\\hoc\\IntlProviderWrapper.js",[],"D:\\myProject\\cvonline.com\\React\\src\\config\\redux.js",["201","202"],"import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport createRootReducer from '~/store/reducers/rootReducer.js';\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst allMiddleware = [\r\n    routerMiddleware(history),\r\n    thunk,\r\n    // createStateSyncMiddleware(reduxStateSyncConfig),\r\n];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...allMiddleware)));\r\nconst store = createStore(rootReducer, applyMiddleware(...allMiddleware));\r\n\r\n// export const dispatch = store.dispatch;\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","D:\\myProject\\cvonline.com\\React\\src\\components\\GlobalStyles\\GlobalStyles.js",[],"D:\\myProject\\cvonline.com\\React\\src\\reportWebVitals.js",[],"D:\\myProject\\cvonline.com\\React\\src\\hoc\\authentication.js",[],"D:\\myProject\\cvonline.com\\React\\src\\routes\\routes.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\rootReducer.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\appReducer.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\reducers\\userReducer.js",[],"D:\\myProject\\cvonline.com\\React\\src\\utils\\index.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\index.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\actionNames.js",[],"D:\\myProject\\cvonline.com\\React\\src\\utils\\constants.js",[],"D:\\myProject\\cvonline.com\\React\\src\\utils\\LanguageUtils.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\PersonalLayout.js",["203","204","205"],"import React, { Fragment, PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames/bind';\r\nimport { FaUserCircle, FaAddressBook } from 'react-icons/fa';\r\nimport { BsFillCalendarDayFill, BsFillTelephoneFill } from 'react-icons/bs';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport { IoIosAddCircle } from 'react-icons/io';\r\nimport { MdOutlineError } from 'react-icons/md';\r\nimport HeadlessTippy from '@tippyjs/react/headless';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\nimport { Toast } from '~/components/Toast/Toast.js';\r\nimport Header from '~/containers/Header/Header.js';\r\nimport Product from '~/layouts/PersonalLayout/Components/Product.js';\r\n\r\nimport styles from './PersonalLayout.module.scss';\r\nimport ContentEditableTag from '~/layouts/PersonalLayout/Components/ContentEditableTag.js';\r\nimport Image from '~/components/Image/Image.js';\r\nimport { JpgImages } from '~/components/Image/Images.js';\r\nimport ChangeImageModal from '~/components/Modal/ChangeImageModal.js';\r\nimport * as userActions from '~/store/actions';\r\nimport Button from '~/components/Button/Button.js';\r\nimport Loading from '~/components/Modal/Loading.js';\r\nimport { override } from 'customize-cra';\r\n\r\nconst cx = classnames.bind(styles);\r\n\r\nclass PersonalLayout extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            languages: '',\r\n        };\r\n    }\r\n\r\n    // =================================================================\r\n    // CRUD USER INFORMATION\r\n\r\n    handleOpenChangeAvatarModal = () => {\r\n        this.setState({ isModalOpen: true });\r\n    };\r\n\r\n    handleCloseChangeAvatarModal = () => {\r\n        this.setState({ isModalOpen: false });\r\n    };\r\n\r\n    handleUpdateAvatarFromChangeImageModal = async (url) => {\r\n        const { id: userId, avatar } = this.props?.user ?? {};\r\n\r\n        if (url !== avatar) {\r\n            // Update avatar to Database\r\n            const data = { userId: userId, avatar: url, label: 'Avatar' };\r\n            const errorCode = await this.props.updateUserInformation(data);\r\n\r\n            if (errorCode === 0) {\r\n                await this.props.readUserInformation(userId);\r\n            }\r\n        } else {\r\n            Toast.TOP_CENTER_WARN(`Ảnh này đang được sử dụng làm Avatar, hãy chọn ảnh khác`, 3000);\r\n        }\r\n    };\r\n\r\n    handleUpdateUserInformation = async (e, name, label) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        let value;\r\n        if (name === 'jobPosition') {\r\n            value = e.target.value;\r\n        } else {\r\n            value = e.target.innerText?.trim();\r\n        }\r\n\r\n        if (value !== this.props?.user?.[name]) {\r\n            const data = { userId: userId, [name]: value, label: label };\r\n\r\n            const errorCode = await this.props.updateUserInformation(data);\r\n\r\n            if (errorCode === 0) {\r\n                await this.props.readUserInformation(userId);\r\n            }\r\n        }\r\n    };\r\n\r\n    getNumberOfRows = (textAreaEl) => {\r\n        const text = textAreaEl?.textContent;\r\n        const row_count = text?.split(/\\r\\n|\\r|\\n/).length;\r\n        return row_count;\r\n    };\r\n\r\n    handleInputLanguagesAndSetRowsForTextarea = async (e) => {\r\n        const value = e.target.value;\r\n\r\n        const paragraphs = e.target.innerHTML\r\n            .split('\\n')\r\n            .map((line) => `<p>${line}</p>`)\r\n            .join('');\r\n        console.log([e.target]);\r\n\r\n        await this.setState({ languages: value });\r\n    };\r\n\r\n    handleUpdateLanguages = async (e) => {\r\n        const { id: userId, languages } = this.props?.user ?? {};\r\n        const value = this.state.languages;\r\n\r\n        if (value !== languages) {\r\n            const data = { userId: userId, languages: value, label: 'Ngoại ngữ' };\r\n            const errorCode = await this.props.updateUserInformation(data);\r\n\r\n            if (errorCode === 0) {\r\n                await this.props.readUserInformation(userId);\r\n            }\r\n        }\r\n    };\r\n\r\n    // =================================================================\r\n    // CRUD PRODUCT\r\n\r\n    handleCreateTechnology = async (data) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n        const newData = {\r\n            ...data,\r\n            userId: userId,\r\n        };\r\n\r\n        const errorCode = await this.props.createTechnology(newData);\r\n\r\n        if (errorCode === 0) {\r\n            const errorCode = await this.props.readProductList(userId);\r\n\r\n            if (errorCode === 0) {\r\n                return errorCode;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleUpdateTechnology = async (data) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n        const newData = {\r\n            ...data,\r\n            userId: userId,\r\n        };\r\n\r\n        const errorCode = await this.props.updateTechnology(newData);\r\n\r\n        if (errorCode === 0) {\r\n            const errorCode = await this.props.readProductList(userId);\r\n\r\n            if (errorCode === 0) {\r\n                return errorCode;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteTechnology = async (technologyId, label) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        const errorCode = await this.props.deleteTechnology(technologyId, label);\r\n        if (errorCode === 0) {\r\n            await this.props.readProductList(userId);\r\n        }\r\n    };\r\n\r\n    // =================================================================\r\n    // CRUD Product\r\n\r\n    handleCreateProduct = async () => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        const errorCode = await this.props.createProduct(userId);\r\n\r\n        if (errorCode === 0) {\r\n            await this.props.readProductList(userId);\r\n\r\n            const ASCOrderProductList = this.props.productList?.sort(function (a, b) {\r\n                return a.order - b.order;\r\n            });\r\n\r\n            const lastProductData = ASCOrderProductList?.at(-1);\r\n            const lastProductId = lastProductData?.productInfo?.id;\r\n\r\n            const lastProduct = document.getElementById(`js-product-${lastProductId}`);\r\n            lastProduct?.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleUpdateProduct = async (data) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n        const newData = { ...data, userId: userId };\r\n\r\n        const errorCode = await this.props.updateProduct(newData);\r\n        if (errorCode === 0) {\r\n            await this.props.readProductList(userId);\r\n        }\r\n    };\r\n\r\n    handleDeleteProduct = async (productId) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n        const errorCode = await this.props.deleteProduct(userId, productId);\r\n\r\n        if (errorCode === 0) {\r\n            await this.props.readProductList(userId);\r\n        }\r\n    };\r\n\r\n    handleMoveUpProduct = async (order) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        const ASCOrderProductList = this.props.productList?.sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n\r\n        const productExchange = ASCOrderProductList?.map((productID) => {\r\n            return { userId: userId, productId: productID.productInfo.id, productOrder: productID.order };\r\n        });\r\n\r\n        const moveItemIndex = productExchange.findIndex((product) => product.productOrder === order);\r\n\r\n        let upperItemOrder = productExchange[moveItemIndex - 1];\r\n        let moveItemOrder = productExchange[moveItemIndex];\r\n\r\n        if (moveItemOrder && upperItemOrder) {\r\n            const changedUpperItem = {\r\n                userId: userId,\r\n                productId: upperItemOrder.productId,\r\n                productOrder: moveItemOrder.productOrder,\r\n                label: 'Vị trí của sản phẩm',\r\n            };\r\n\r\n            const changedMoveItem = {\r\n                userId: userId,\r\n                productId: moveItemOrder.productId,\r\n                productOrder: upperItemOrder.productOrder,\r\n                label: 'Vị trí của sản phẩm',\r\n            };\r\n\r\n            const errorCode1 = await this.props.updateProduct(changedUpperItem);\r\n            if (errorCode1 === 0) {\r\n                const errorCode2 = await this.props.updateProduct(changedMoveItem);\r\n\r\n                if (errorCode2 === 0) {\r\n                    await this.props.readProductList(userId);\r\n                }\r\n            }\r\n        } else {\r\n            Toast.TOP_CENTER_WARN('Không thể di chuyển sản phẩm này lên trên', 3000);\r\n        }\r\n    };\r\n\r\n    handleMoveDownProduct = async (order) => {\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        const ASCOrderProductList = this.props.productList?.sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n        const productExchange = ASCOrderProductList?.map((productID) => {\r\n            return { userId: userId, productId: productID.productInfo.id, productOrder: productID.order };\r\n        });\r\n\r\n        const moveItemIndex = productExchange.findIndex((product) => product.productOrder === order);\r\n\r\n        let lowerItemOrder = productExchange[moveItemIndex + 1];\r\n        let moveItemOrder = productExchange[moveItemIndex];\r\n\r\n        if (moveItemOrder && lowerItemOrder) {\r\n            const changedUpperItem = {\r\n                userId: userId,\r\n                productId: lowerItemOrder.productId,\r\n                productOrder: moveItemOrder.productOrder,\r\n                label: 'Vị trí của sản phẩm',\r\n            };\r\n\r\n            const changedMoveItem = {\r\n                userId: userId,\r\n                productId: moveItemOrder.productId,\r\n                productOrder: lowerItemOrder.productOrder,\r\n                label: 'Vị trí của sản phẩm',\r\n            };\r\n\r\n            const errorCode1 = await this.props.updateProduct(changedUpperItem);\r\n            if (errorCode1 === 0) {\r\n                const errorCode2 = await this.props.updateProduct(changedMoveItem);\r\n\r\n                if (errorCode2 === 0) {\r\n                    await this.props.readProductList(userId);\r\n                }\r\n            }\r\n        } else {\r\n            Toast.TOP_CENTER_WARN('Không thể di chuyển sản phẩm này xuống dưới', 3000);\r\n        }\r\n    };\r\n\r\n    // =================================================================\r\n    async componentDidMount() {\r\n        // Get all data for CV Layout when sign in\r\n        const { id: userId } = this.props?.user ?? {};\r\n\r\n        if (userId) {\r\n            const errorCode = await this.props.readUserInformation(userId);\r\n            if (errorCode === 0) {\r\n                await this.setState({ languages: this.props?.user?.languages });\r\n            }\r\n            await this.props.readProductList(userId);\r\n\r\n            // Set rows for textarea by JS\r\n            const textAreaElement = document.getElementById(`js-language-desc`);\r\n            if (textAreaElement) {\r\n                const rows = textAreaElement?.innerHTML?.split(/\\r\\n|\\r|\\n/).length;\r\n\r\n                if (rows) {\r\n                    textAreaElement.rows = rows;\r\n                }\r\n            }\r\n\r\n            // Press ENTER to change input field or submit\r\n            const container = document.querySelector(`.${cx('col-left')}`);\r\n            if (container) {\r\n                const inputArray = container.querySelectorAll(`[contentEditable]`);\r\n                Array.from(inputArray).forEach((input, index) => {\r\n                    input.onkeydown = (event) => {\r\n                        if (event.key === 'Enter') {\r\n                            event.preventDefault();\r\n                            let nextEl = inputArray[index + 1];\r\n\r\n                            if (nextEl) {\r\n                                nextEl.focus();\r\n                            } else {\r\n                                nextEl = inputArray[0];\r\n                                nextEl.focus();\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n            }\r\n        } else {\r\n            Toast.TOP_CENTER_WARN('Vui lòng đăng nhập lại');\r\n            await this.props.userSignOut();\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        // Make product List in ascending order\r\n        const ASCOrderProductList = this.props.productList?.sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n\r\n        return (\r\n            <div className={cx('body')}>\r\n                <Header productList={ASCOrderProductList} />\r\n                <div className={cx('cv-container')}>\r\n                    <div className={cx('user-information')}>\r\n                        <div className={cx('user-information-basic')}>\r\n                            <div className={cx('avatar-wrapper')}>\r\n                                <div className={cx('border-outline')}>\r\n                                    <HeadlessTippy\r\n                                        zIndex=\"10\"\r\n                                        placement=\"bottom\"\r\n                                        interactive\r\n                                        delay={[0, 300]}\r\n                                        offset={[0, -100]}\r\n                                        render={(attrs) => (\r\n                                            <div tabIndex=\"-1\" {...attrs}>\r\n                                                <div\r\n                                                    className={cx('tooltip')}\r\n                                                    onClick={() => this.handleOpenChangeAvatarModal()}\r\n                                                >\r\n                                                    Sửa ảnh\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        <Image\r\n                                            className={cx('avatar')}\r\n                                            src={this.props.user?.avatar || JpgImages.avatarPlaceholder}\r\n                                            alt={`${this.props?.user?.fullName}`}\r\n                                            round\r\n                                        />\r\n                                    </HeadlessTippy>\r\n\r\n                                    {this.state.isModalOpen && (\r\n                                        <ChangeImageModal\r\n                                            round\r\n                                            src={this.props.user?.avatar}\r\n                                            onClose={() => this.handleCloseChangeAvatarModal()}\r\n                                            onGetUrl={this.handleUpdateAvatarFromChangeImageModal}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <ContentEditableTag\r\n                                content={this.props?.user?.fullName}\r\n                                className={cx('full-name')}\r\n                                placeholder=\"Nguyễn Xuân Huy\"\r\n                                onblur={(e) => this.handleUpdateUserInformation(e, 'fullName', 'Họ và tên')}\r\n                            />\r\n                            <select\r\n                                className={cx('select-job-title')}\r\n                                onMouseEnter={(e) => e.target.focus()}\r\n                                onChange={(e) => this.handleUpdateUserInformation(e, 'jobPosition', 'Vị trí ứng tuyển')}\r\n                            >\r\n                                <option className={cx('option-job-title')} value=\"Fullstack developer\">\r\n                                    Fullstack developer\r\n                                </option>\r\n                                <option className={cx('option-job-title')} value=\"Frontend developer\">\r\n                                    Frontend developer\r\n                                </option>\r\n                                <option className={cx('option-job-title')} value=\"Backend developer\">\r\n                                    Backend developer\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className={cx('user-information-detail')}>\r\n                            <div className={cx('candidate-info')}>\r\n                                <p className={cx('text')}>Thông tin cá nhân</p>\r\n                                <div className={cx('content')}>\r\n                                    <div className={cx('info')}>\r\n                                        <span className={cx('icon')}>\r\n                                            <BsFillCalendarDayFill />\r\n                                        </span>\r\n                                        <ContentEditableTag\r\n                                            content={this.props?.user?.dateOfBirth}\r\n                                            className={cx('info-text')}\r\n                                            placeholder=\"Ngày tháng năm sinh\"\r\n                                            onblur={(e) =>\r\n                                                this.handleUpdateUserInformation(e, 'dateOfBirth', 'Ngày sinh')\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className={cx('info')}>\r\n                                        <span className={cx('icon')}>\r\n                                            <FaUserCircle />\r\n                                        </span>\r\n                                        <ContentEditableTag\r\n                                            content={this.props?.user?.gender}\r\n                                            className={cx('info-text')}\r\n                                            placeholder=\"Giới tính\"\r\n                                            onblur={(e) => this.handleUpdateUserInformation(e, 'gender', 'Giới tính')}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={cx('info')}>\r\n                                        <span className={cx('icon')}>\r\n                                            <BsFillTelephoneFill />\r\n                                        </span>\r\n                                        <ContentEditableTag\r\n                                            content={this.props?.user?.phoneNumber}\r\n                                            className={cx('info-text')}\r\n                                            placeholder=\"Số điện thoại\"\r\n                                            onblur={(e) =>\r\n                                                this.handleUpdateUserInformation(e, 'phoneNumber', 'Số điện thoại')\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className={cx('info')}>\r\n                                        <span className={cx('icon')}>\r\n                                            <MdEmail />\r\n                                        </span>\r\n                                        <p\r\n                                            dangerouslySetInnerHTML={{ __html: this.props?.user?.email }}\r\n                                            className={cx('info-text', 'email')}\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className={cx('info')}>\r\n                                        <span className={cx('icon')}>\r\n                                            <FaAddressBook />\r\n                                        </span>\r\n                                        <ContentEditableTag\r\n                                            content={this.props?.user?.address}\r\n                                            className={cx('info-text')}\r\n                                            placeholder=\"Địa chỉ\"\r\n                                            onblur={(e) => this.handleUpdateUserInformation(e, 'address', 'Địa chỉ')}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={cx('candidate-info')}>\r\n                                <p className={cx('text')}>Trình độ ngoại ngữ</p>\r\n                                <textarea\r\n                                    id={`js-language-desc`}\r\n                                    placeholder=\"Nhập chứng chỉ hoặc trình độ tương đương\"\r\n                                    className={cx('language-desc')}\r\n                                    spellCheck={false}\r\n                                    value={this.state?.languages ?? ''}\r\n                                    onInput={(e) => this.handleInputLanguagesAndSetRowsForTextarea(e)}\r\n                                    onBlur={() => this.handleUpdateLanguages()}\r\n                                    onMouseEnter={(e) => e.target.focus()}\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={cx('product-list-container')}>\r\n                        {this.props.productList ? (\r\n                            <Fragment>\r\n                                <div className={cx('product-list')}>\r\n                                    {ASCOrderProductList?.map((product, index) => {\r\n                                        return (\r\n                                            <Product\r\n                                                key={index}\r\n                                                productData={product}\r\n                                                index={index}\r\n                                                // =================================================================\r\n                                                onCreateProduct={this.handleCreateProduct}\r\n                                                onUpdateProduct={this.handleUpdateProduct}\r\n                                                onDeleteProduct={this.handleDeleteProduct}\r\n                                                onMoveUpProduct={this.handleMoveUpProduct}\r\n                                                onMoveDownProduct={this.handleMoveDownProduct}\r\n                                                // =================================================================\r\n                                                onCreateTechnology={this.handleCreateTechnology}\r\n                                                onUpdateTechnology={this.handleUpdateTechnology}\r\n                                                onDeleteTechnology={this.handleDeleteTechnology}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div className={cx('add-new-product-container')}>\r\n                                    <Button\r\n                                        className={cx('add-new-product-button')}\r\n                                        onClick={() => this.handleCreateProduct()}\r\n                                    >\r\n                                        <span className={cx('add-new-product-icon')}>\r\n                                            <IoIosAddCircle />\r\n                                        </span>\r\n                                        THÊM SẢN PHẨM\r\n                                    </Button>\r\n                                </div>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <div className={cx('product-list-error-load')}>\r\n                                <p className={cx('error-text')}>\r\n                                    <MdOutlineError className={cx('icon')} />\r\n                                    <span>Không tải được danh sách sản phẩm</span>\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {this.props.isLoading && <Loading />}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        productList: state.user.productList,\r\n        isLoading: state.user.isLoading.CVLayout,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // CRUD User information\r\n        readUserInformation: (userId) => dispatch(userActions.readUserInformation(userId)),\r\n        updateUserInformation: (data) => dispatch(userActions.updateUserInformation(data)),\r\n\r\n        // CRUD Product\r\n        createProduct: (userId) => dispatch(userActions.createProduct(userId)),\r\n        readProductList: (userId) => dispatch(userActions.readProductList(userId)),\r\n        updateProduct: (data) => dispatch(userActions.updateProduct(data)),\r\n        deleteProduct: (userId, productId) => dispatch(userActions.deleteProduct(userId, productId)),\r\n\r\n        // CRUD Source code, Technology, Library\r\n        createTechnology: (data) => dispatch(userActions.createTechnology(data)),\r\n        updateTechnology: (data) => dispatch(userActions.updateTechnology(data)),\r\n        deleteTechnology: (technologyId, label) => dispatch(userActions.deleteTechnology(technologyId, label)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalLayout);\r\n","D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\AuthLayout.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\Images.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Toast\\Toast.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\ChangeImageModal.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\Image.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\ContentEditableTag.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\Loading.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\Product.js",["206"],"import React, { PureComponent } from 'react';\r\nimport classnames from 'classnames/bind';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from 'react-icons/ai';\r\nimport _ from 'lodash';\r\nimport { Toast } from '~/components/Toast/Toast.js';\r\n\r\nimport styles from './Product.module.scss';\r\nimport ContentEditableTag from '~/layouts/PersonalLayout/Components/ContentEditableTag.js';\r\nimport Image from '~/components/Image/Image.js';\r\nimport TechnologyList from './TechnologyList.js';\r\nimport ChangeImageModal from '~/components/Modal/ChangeImageModal.js';\r\nimport Button from '~/components/Button/Button.js';\r\nimport EditProduct from '~/layouts/PersonalLayout/Components/EditProduct.js';\r\n\r\nconst cx = classnames.bind(styles);\r\n\r\nclass Product extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            FE_isPagination: true,\r\n            FE_Page: 1,\r\n            FE_PageSize: 10,\r\n            FE_sortBy: '',\r\n            FE_isSearch: false,\r\n\r\n            BE_isPagination: true,\r\n            BE_Page: 1,\r\n            BE_PageSize: 10,\r\n            BE_sortBy: '',\r\n            BE_isSearch: false,\r\n\r\n            isModalOpen: false,\r\n            productDesc: '',\r\n        };\r\n\r\n        this.editProductId = React.createRef();\r\n    }\r\n\r\n    // =================================================================\r\n    // CHANGE PRODUCT DESCRIPTION\r\n\r\n    handleUpdateProductName = async (e, productId) => {\r\n        const { productInfo } = this.props?.productData ?? {};\r\n\r\n        const value = e.target.innerText?.trim();\r\n        const data = { productId: productId, name: value, label: 'Tên sản phẩm' };\r\n\r\n        if (value !== productInfo?.name) {\r\n            await this.props?.onUpdateProduct(data);\r\n        }\r\n    };\r\n\r\n    handlePressEnterKeyBoard = (e, productInfo) => {\r\n        // Press Enter to blur out product name and focus on product description\r\n        const producDescElement = document.getElementById(`js-product-desc-${productInfo}`);\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            e.target.blur();\r\n\r\n            if (producDescElement) {\r\n                producDescElement.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    getNumberOfRowsAndSetForTextArea = () => {\r\n        const { productInfo } = this.props?.productData ?? {};\r\n        const textAreaElement = document.getElementById(`js-product-desc-${productInfo?.id}`);\r\n        const text = textAreaElement?.textContent;\r\n        console.log('text', text);\r\n        const row_count = text?.split(/\\r\\n|\\r|\\n/).length;\r\n        textAreaElement.rows = row_count || 2;\r\n    };\r\n\r\n    handleInputProductDescAndSetRowsForTextarea = async (e) => {\r\n        const value = e.target.value;\r\n\r\n        await this.setState({ productDesc: value });\r\n        this.getNumberOfRowsAndSetForTextArea();\r\n    };\r\n\r\n    handleUpdateProductDesc = async () => {\r\n        const { productInfo } = this.props?.productData ?? {};\r\n        const value = this.state.productDesc;\r\n\r\n        if (value !== productInfo?.desc) {\r\n            const data = { productId: productInfo?.id, desc: value, label: 'mô tả sản phẩm' };\r\n            await this.props?.onUpdateProduct(data);\r\n        }\r\n    };\r\n\r\n    // ----------------------------------------------------------------\r\n\r\n    handleUpdateImageFromChangeImageModal = async (url) => {\r\n        const { productInfo } = this.props?.productData ?? {};\r\n        const { image: imageDB } = productInfo ?? {};\r\n\r\n        if (url !== imageDB) {\r\n            // Update product image to Database\r\n            const data = { productId: productInfo?.id, image: url, label: 'Hình ảnh sản phẩm' };\r\n            await this.props?.onUpdateProduct(data);\r\n        } else {\r\n            Toast.TOP_CENTER_WARN(`Ảnh này đã được sử dụng, hãy chọn ảnh khác`, 3000);\r\n        }\r\n    };\r\n\r\n    handleCloseChangeImageModal = () => {\r\n        this.setState({ isModalOpen: false });\r\n    };\r\n\r\n    // =================================================================\r\n    // PAGINATION\r\n\r\n    handleChangePage = (event, value, side) => {\r\n        this.setState({ [`${side === 'FE' ? 'FE_Page' : 'BE_Page'}`]: value });\r\n    };\r\n\r\n    handleChangePageSize = (e, side) => {\r\n        const value = e.target.innerText;\r\n\r\n        if (value === 'Tất cả') {\r\n            this.setState({ [`${side === 'FE' ? 'FE_isPagination' : 'BE_isPagination'}`]: false });\r\n        } else {\r\n            this.setState({\r\n                [`${side === 'FE' ? 'FE_isPagination' : 'BE_isPagination'}`]: true,\r\n                [`${side === 'FE' ? 'FE_PageSize' : 'BE_PageSize'}`]: +value,\r\n                [`${side === 'FE' ? 'FE_Page' : 'BE_Page'}`]: 1,\r\n            });\r\n        }\r\n\r\n        // Remove active class in all buttons before set active for button is clicked\r\n        const parentElement = e.target.parentNode;\r\n        const allDisplayButtons = parentElement?.childNodes;\r\n        allDisplayButtons?.forEach((displayButton) => {\r\n            const isActive = displayButton.classList.contains(cx('active'));\r\n            if (isActive) {\r\n                displayButton.classList.remove(cx('active'));\r\n            }\r\n        });\r\n        e.target.classList.add(cx('active'));\r\n    };\r\n\r\n    // =================================================================\r\n    // SORT AND FILTER\r\n\r\n    handeSortLibrary = (e, side, sort) => {\r\n        const element = e.currentTarget;\r\n        const isActive = element.classList.contains(cx('active-sort'));\r\n\r\n        if (isActive) {\r\n            element.classList.remove(cx('active'));\r\n            this.setState({ [`${side === 'FE' ? 'FE_sortBy' : 'BE_sortBy'}`]: '' });\r\n        } else {\r\n            this.setState({ [`${side === 'FE' ? 'FE_sortBy' : 'BE_sortBy'}`]: sort });\r\n        }\r\n    };\r\n\r\n    handleSearchLibrary = async (e, side) => {\r\n        const value = e.target.value?.trim();\r\n        const { productInfo, FELibraryList, BELibraryList } = this.props?.productData ?? {};\r\n\r\n        // Check value is not empty\r\n        if (value) {\r\n            await this.setState({ [`${side === 'FE' ? 'FE_isSearch' : 'BE_isSearch'}`]: true });\r\n\r\n            const libraryList = side === 'FE' ? FELibraryList : BELibraryList;\r\n\r\n            // Loop through all library button in list\r\n            _.forEach(libraryList, function (library) {\r\n                const libraryName = document.getElementById(`js-name-button-LIBRARY-${library.id}`);\r\n\r\n                if (libraryName) {\r\n                    const buttonContainer = libraryName.closest(`#js-container-button-LIBRARY-${library.id}`);\r\n\r\n                    if (buttonContainer) {\r\n                        // Clear background-color: yellow of all previous button\r\n                        buttonContainer.style.display = 'block';\r\n                        libraryName.innerHTML = library.name;\r\n\r\n                        // Set background-color: yellow for button matches search value input\r\n                        const regex = new RegExp(value, 'gi');\r\n                        const name = libraryName.innerHTML.replace(/(<mark}>|<\\/mark>)/gim);\r\n                        const newName = name.replace(regex, `<mark  style={{ backgroundColor: 'yellow'}}>$&</mark>`);\r\n\r\n                        // Only set background-color: yellow for result matches search value input\r\n                        if (name !== newName) {\r\n                            libraryName.innerHTML = newName;\r\n                        } else {\r\n                            // Hide library button does not match\r\n                            buttonContainer.style.display = 'none';\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            const searchLibraryList = document.getElementById(\r\n                `js-library-list-${side === 'FE' ? 'FE' : 'BE'}-${productInfo?.id}`,\r\n            );\r\n            const resultNotFound = document.getElementById(`js-result-not-found-${side === 'FE' ? 'FE' : 'BE'}`);\r\n\r\n            // Remove not found text of all buttons\r\n            if (resultNotFound) {\r\n                resultNotFound.remove();\r\n            }\r\n\r\n            if (searchLibraryList) {\r\n                const childArray = searchLibraryList.childNodes;\r\n\r\n                // Check whether Library List dose not have 'display: none;' or not\r\n                const isEmptyArray = Array.from(childArray).some(\r\n                    (item) => item.getAttribute('style') !== 'display: none;',\r\n                );\r\n\r\n                // if library list doesn't have nay 'display: block' button, set Not found Text\r\n                if (!isEmptyArray) {\r\n                    const notFoundElement = document.createElement('p');\r\n                    notFoundElement.className = cx(`search-result-not-found-${side === 'FE' ? 'FE' : 'BE'}`);\r\n                    notFoundElement.id = `js-result-not-found-${side === 'FE' ? 'FE' : 'BE'}`;\r\n                    notFoundElement.innerText = 'Không tìm thấy kết quả';\r\n\r\n                    searchLibraryList.appendChild(notFoundElement);\r\n                }\r\n            }\r\n        } else {\r\n            // If value is empty\r\n            await this.setState({ [`${side === 'FE' ? 'FE_isSearch' : 'BE_isSearch'}`]: false });\r\n\r\n            const libraryList = side === 'FE' ? FELibraryList : BELibraryList;\r\n\r\n            // Restore the original state of the button\r\n            _.forEach(libraryList, function (library) {\r\n                const libraryName = document.getElementById(`js-name-button-LIBRARY-${library.id}`);\r\n\r\n                if (libraryName) {\r\n                    libraryName.innerHTML = library.name;\r\n                    const closest = libraryName.closest(`#js-container-button-LIBRARY-${library.id}`);\r\n\r\n                    if (closest) {\r\n                        closest.style.display = 'block';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    // =================================================================\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { productInfo, numberofFELibrary, numberofBELibrary } = this.props?.productData ?? {};\r\n\r\n        // Turn to last page when add or delete a library\r\n        if (numberofFELibrary !== prevProps?.productData?.numberofFELibrary) {\r\n            const FE_FinalPage = Math.ceil(numberofFELibrary / this.state.FE_PageSize);\r\n            this.setState({ FE_Page: FE_FinalPage });\r\n        }\r\n\r\n        if (numberofBELibrary !== prevProps?.productData?.numberofBELibrary) {\r\n            const BE_FinalPage = Math.ceil(numberofBELibrary / this.state.BE_PageSize);\r\n            this.setState({ BE_Page: BE_FinalPage });\r\n        }\r\n\r\n        // Update product desc and rows attribute after updating props from redux\r\n        if (productInfo?.desc !== prevProps?.productData?.productInfo?.desc) {\r\n            await this.setState({ productDesc: productInfo?.desc });\r\n\r\n            this.getNumberOfRowsAndSetForTextArea();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { productInfo } = this.props?.productData ?? {};\r\n\r\n        await this.setState({ productDesc: productInfo?.desc });\r\n\r\n        this.getNumberOfRowsAndSetForTextArea();\r\n\r\n        // Hover product and show Edit Product\r\n        const productContainer = document.getElementById(`js-product-${productInfo?.id}`);\r\n        const editProduct = document.getElementById(`js-edit-product-${productInfo?.id}`);\r\n\r\n        if (productContainer && editProduct) {\r\n            productContainer.onmouseover = (e) => {\r\n                e.stopPropagation();\r\n                editProduct.style.display = 'flex';\r\n            };\r\n\r\n            productContainer.onmouseleave = (e) => {\r\n                e.stopPropagation();\r\n                this.editProductId.current = setTimeout(() => {\r\n                    editProduct.style.display = 'none';\r\n                }, 100);\r\n            };\r\n\r\n            editProduct.onmouseenter = (e) => {\r\n                clearTimeout(this.editProductId.current);\r\n            };\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.editProductId.current);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            order,\r\n            productInfo,\r\n            sourceCodeList,\r\n            FETechnologyList,\r\n            BETechnologyList,\r\n            FELibraryList: FE_AllLibraryList,\r\n            numberofFELibrary,\r\n            BELibraryList: BE_AllLibraryList,\r\n            numberofBELibrary,\r\n        } = this.props?.productData ?? {};\r\n\r\n        // =================================================================\r\n        // PAGINATION\r\n\r\n        const FETotalPage = Math.ceil(numberofFELibrary / this.state.FE_PageSize);\r\n        const BETotalPage = Math.ceil(numberofBELibrary / this.state.BE_PageSize);\r\n\r\n        const FE_paginatedLibraryList = _.chunk(FE_AllLibraryList, this.state.FE_PageSize);\r\n        const FE_paginationLibraryList = FE_paginatedLibraryList[this.state.FE_Page - 1];\r\n        const BE_paginatedLibraryList = _.chunk(BE_AllLibraryList, this.state.BE_PageSize);\r\n        const BE_paginationLibraryList = BE_paginatedLibraryList[this.state.BE_Page - 1];\r\n\r\n        const FELibraryListArray = this.state.FE_isPagination ? FE_paginationLibraryList : FE_AllLibraryList;\r\n        const BELibraryListArray = this.state.BE_isPagination ? BE_paginationLibraryList : BE_AllLibraryList;\r\n\r\n        // =================================================================\r\n        // SORT LIST\r\n\r\n        // Check FE_isSearch and FE_sortBy in order to use FE Library List\r\n        const FE_LibraryList = this.state.FE_isSearch ? FE_AllLibraryList : FELibraryListArray;\r\n\r\n        let FE_LibraryList_SortedOrNot;\r\n        if (FE_LibraryList?.length > 0) {\r\n            FE_LibraryList_SortedOrNot = this.state.FE_sortBy\r\n                ? _.orderBy(\r\n                      [...FE_LibraryList],\r\n                      [\r\n                          (value) => {\r\n                              return value.name?.toLowerCase();\r\n                          },\r\n                      ],\r\n                      [this.state.FE_sortBy],\r\n                  )\r\n                : FE_LibraryList;\r\n        }\r\n\r\n        // Check BE_isSearch and BE_sortBy in order to use BE Library List\r\n        const BE_LibraryList = this.state.BE_isSearch ? BE_AllLibraryList : BELibraryListArray;\r\n\r\n        let BE_LibraryList_SortedOrNot;\r\n        if (BE_LibraryList?.length > 0) {\r\n            BE_LibraryList_SortedOrNot = this.state.BE_sortBy\r\n                ? _.orderBy(\r\n                      [...BE_LibraryList],\r\n                      [\r\n                          (value) => {\r\n                              return value.name?.toLowerCase();\r\n                          },\r\n                      ],\r\n                      [this.state.BE_sortBy],\r\n                  )\r\n                : BE_LibraryList;\r\n        }\r\n\r\n        // =================================================================\r\n\r\n        return (\r\n            <div className={cx('product-container')} id={`js-product-${productInfo?.id}`}>\r\n                <EditProduct\r\n                    id={`js-edit-product-${productInfo?.id}`}\r\n                    onMoveUpProduct={() => this.props.onMoveUpProduct(order)}\r\n                    onMoveDownProduct={() => this.props.onMoveDownProduct(order)}\r\n                    onCreateProduct={() => this.props.onCreateProduct()}\r\n                    onDeleteProduct={() => this.props.onDeleteProduct(productInfo?.id)}\r\n                />\r\n\r\n                <div className={cx('product')}>\r\n                    <div className={cx('product-name-desc')} spellCheck=\"false\">\r\n                        <div className={cx('product-name-container')}>\r\n                            <ContentEditableTag\r\n                                content={productInfo?.name}\r\n                                className={cx('product-name')}\r\n                                placeholder=\"Tên sản phẩm\"\r\n                                onBlur={(e) => this.handleUpdateProductName(e, productInfo?.id)}\r\n                                onKeyPress={(e) => this.handlePressEnterKeyBoard(e, productInfo?.id)}\r\n                            />\r\n                        </div>\r\n                        <textarea\r\n                            id={`js-product-desc-${productInfo?.id}`}\r\n                            placeholder=\"Mô tả sản phẩm\"\r\n                            className={cx('product-desc')}\r\n                            spellCheck={false}\r\n                            rows={1}\r\n                            value={this.state?.productDesc ?? ''}\r\n                            onInput={(e) => this.handleInputProductDescAndSetRowsForTextarea(e)}\r\n                            onBlur={() => this.handleUpdateProductDesc()}\r\n                            onMouseEnter={(e) => e.target.focus()}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className={cx('product-image-sourcecode')}>\r\n                        <div className={cx('product-image-container')}>\r\n                            <div\r\n                                className={cx('edit-image-button')}\r\n                                onClick={() => this.setState({ isModalOpen: true })}\r\n                            >\r\n                                Sửa ảnh\r\n                            </div>\r\n                            <Image src={productInfo?.image} className={cx('image')} alt=\"Ảnh sản phẩm\" />\r\n\r\n                            {this.state.isModalOpen && (\r\n                                <ChangeImageModal\r\n                                    round={false}\r\n                                    src={productInfo?.image}\r\n                                    onClose={() => this.handleCloseChangeImageModal()}\r\n                                    onGetUrl={this.handleUpdateImageFromChangeImageModal}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className={cx('source-code-section')}>\r\n                            <div className={cx('list')}>\r\n                                <TechnologyList\r\n                                    technologyListID={`js-source-code-list-${productInfo?.id}`}\r\n                                    draggable\r\n                                    label=\"source code\"\r\n                                    type=\"SOURCECODE\"\r\n                                    keyprop=\"SC\"\r\n                                    productId={productInfo?.id}\r\n                                    technologyList={sourceCodeList}\r\n                                    // =================================================================\r\n                                    // CRUD Source Code\r\n                                    onCreateTechnology={this.props.onCreateTechnology}\r\n                                    onUpdateTechnology={this.props.onUpdateTechnology}\r\n                                    onDeleteTechnology={this.props.onDeleteTechnology}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={cx('technology')}>\r\n                        <div className={cx('server', 'front-end')}>\r\n                            <span className={cx('server-side-title')}>FRONT-END</span>\r\n                            <div className={cx('technology-used')}>\r\n                                <div className={cx('technology-used-title')}>\r\n                                    <span className={cx('title')}>CÔNG NGHỆ SỬ DỤNG</span>\r\n                                </div>\r\n                                <div className={cx('list')}>\r\n                                    <TechnologyList\r\n                                        technologyListID={`js-technology-list-FE-${productInfo?.id}`}\r\n                                        draggable\r\n                                        label=\"công nghệ ở FE\"\r\n                                        type=\"TECHNOLOGY\"\r\n                                        keyprop=\"TE\"\r\n                                        side=\"FE\"\r\n                                        productId={productInfo?.id}\r\n                                        technologyList={FETechnologyList}\r\n                                        // =================================================================\r\n                                        // CRUD FE Technology List\r\n                                        onCreateTechnology={this.props.onCreateTechnology}\r\n                                        onUpdateTechnology={this.props.onUpdateTechnology}\r\n                                        onDeleteTechnology={this.props.onDeleteTechnology}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={cx('library-used')}>\r\n                                <div className={cx('library-used-title')}>\r\n                                    <span className={cx('title')}>THƯ VIỆN SỬ DỤNG</span>\r\n                                </div>\r\n                                <div className={cx('library-filter-sort')}>\r\n                                    <div className={cx('library-filter')}>\r\n                                        <input\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Tìm kiếm thư viện\"\r\n                                            className={cx('library-filter-search')}\r\n                                            spellCheck=\"false\"\r\n                                            onInput={(e) => this.handleSearchLibrary(e, 'FE')}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className={cx('library-sort')}>\r\n                                        <span className={cx('label')}>Sắp xếp</span>\r\n                                        <Button\r\n                                            className={cx('sort', {\r\n                                                'active-sort': this.state.FE_sortBy === 'asc',\r\n                                            })}\r\n                                            onClick={(e) => this.handeSortLibrary(e, 'FE', 'asc')}\r\n                                        >\r\n                                            <AiOutlineSortAscending />\r\n                                        </Button>\r\n                                        <Button\r\n                                            className={cx('sort', {\r\n                                                'active-sort': this.state.FE_sortBy === 'desc',\r\n                                            })}\r\n                                            onClick={(e) => this.handeSortLibrary(e, 'FE', 'desc')}\r\n                                        >\r\n                                            <AiOutlineSortDescending />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {!this.state.FE_isSearch && (\r\n                                    <div className={cx('display')}>\r\n                                        <span className={cx('label')}>Hiển thị</span>\r\n                                        <div className={cx('select')}>\r\n                                            {['Tất cả', 10, 20, 30, 40, 50].map((button, index) => {\r\n                                                return (\r\n                                                    <Button\r\n                                                        id={`js-display-paginition-FE-${productInfo?.id}`}\r\n                                                        key={index}\r\n                                                        className={cx('button', {\r\n                                                            active: button === this.state.FE_PageSize,\r\n                                                        })}\r\n                                                        onClick={(e) => this.handleChangePageSize(e, 'FE')}\r\n                                                    >\r\n                                                        {button}\r\n                                                    </Button>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <TechnologyList\r\n                                    technologyListID={`js-library-list-FE-${productInfo?.id}`}\r\n                                    draggable\r\n                                    label=\"thư viện FE\"\r\n                                    type=\"LIBRARY\"\r\n                                    keyprop=\"LI\"\r\n                                    side=\"FE\"\r\n                                    productId={productInfo?.id}\r\n                                    technologyList={FE_LibraryList_SortedOrNot}\r\n                                    // =================================================================\r\n                                    // CRUD FE Library List\r\n                                    onCreateTechnology={this.props.onCreateTechnology}\r\n                                    onUpdateTechnology={this.props.onUpdateTechnology}\r\n                                    onDeleteTechnology={this.props.onDeleteTechnology}\r\n                                    // =================================================================\r\n                                    // Search - Sort\r\n                                    isSearch={this.state.FE_isSearch}\r\n                                    isSortBy={this.state.FE_sortBy}\r\n                                />\r\n\r\n                                {!this.state.FE_isSearch && this.state.FE_isPagination && (\r\n                                    <div className={cx('pagination-container')}>\r\n                                        <Pagination\r\n                                            count={FETotalPage}\r\n                                            variant=\"outlined\"\r\n                                            size=\"medium\"\r\n                                            siblingCount={1}\r\n                                            boundaryCount={1}\r\n                                            page={this.state.FE_Page}\r\n                                            sx={{\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root': {\r\n                                                    color: 'var(--primary-color)',\r\n                                                    fontSize: '12px',\r\n                                                    borderColor: 'var(--green-color-02)',\r\n                                                },\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root:hover': {\r\n                                                    backgroundColor: 'var(--button-bgc-green-02)',\r\n                                                },\r\n\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected':\r\n                                                    {\r\n                                                        color: '#fff',\r\n                                                        backgroundColor: 'var(--button-bgc-green-01)',\r\n                                                    },\r\n\r\n                                                '& .Mui-selected:hover': {\r\n                                                    backgroundColor: 'var(--button-bgc-green-01) !important',\r\n                                                },\r\n                                            }}\r\n                                            onChange={(e, value) => this.handleChangePage(e, value, 'FE')}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={cx('server', 'back-end')}>\r\n                            <span className={cx('server-side-title')}>BACK-END</span>\r\n                            <div className={cx('technology-used')}>\r\n                                <div className={cx('technology-used-title')}>\r\n                                    <span className={cx('title')}>CÔNG NGHỆ SỬ DỤNG</span>\r\n                                </div>\r\n                                <div className={cx('list')}>\r\n                                    <TechnologyList\r\n                                        technologyListID={`js-technology-list-BE-${productInfo?.id}`}\r\n                                        draggable\r\n                                        label=\"công nghệ ở BE\"\r\n                                        type=\"TECHNOLOGY\"\r\n                                        keyprop=\"TE\"\r\n                                        side=\"BE\"\r\n                                        productId={productInfo?.id}\r\n                                        technologyList={BETechnologyList}\r\n                                        // =================================================================\r\n                                        // CRUD FE Technology List\r\n                                        onCreateTechnology={this.props.onCreateTechnology}\r\n                                        onUpdateTechnology={this.props.onUpdateTechnology}\r\n                                        onDeleteTechnology={this.props.onDeleteTechnology}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={cx('library-used')}>\r\n                                <div className={cx('library-used-title')}>\r\n                                    <span className={cx('title')}>THƯ VIỆN SỬ DỤNG</span>\r\n                                </div>\r\n\r\n                                <div className={cx('library-filter-sort')}>\r\n                                    <div className={cx('library-filter')}>\r\n                                        <input\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Tìm kiếm thư viện\"\r\n                                            className={cx('library-filter-search')}\r\n                                            spellCheck=\"false\"\r\n                                            onInput={(e) => this.handleSearchLibrary(e, 'BE')}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className={cx('library-sort')}>\r\n                                        <span className={cx('label')}>Sắp xếp</span>\r\n                                        <Button\r\n                                            className={cx('sort', {\r\n                                                'active-sort': this.state.BE_sortBy === 'asc',\r\n                                            })}\r\n                                            onClick={(e) => this.handeSortLibrary(e, 'BE', 'asc')}\r\n                                        >\r\n                                            <AiOutlineSortAscending />\r\n                                        </Button>\r\n                                        <Button\r\n                                            className={cx('sort', {\r\n                                                'active-sort': this.state.BE_sortBy === 'desc',\r\n                                            })}\r\n                                            onClick={(e) => this.handeSortLibrary(e, 'BE', 'desc')}\r\n                                        >\r\n                                            <AiOutlineSortDescending />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {!this.state.BE_isSearch && (\r\n                                    <div className={cx('display')}>\r\n                                        <span className={cx('label')}>Hiển thị</span>\r\n                                        <div className={cx('select')}>\r\n                                            {['Tất cả', 10, 20, 30, 40, 50].map((button, index) => {\r\n                                                return (\r\n                                                    <Button\r\n                                                        id={`js-display-paginition-BE-${productInfo?.id}`}\r\n                                                        key={index}\r\n                                                        className={cx('button', {\r\n                                                            active: button === this.state.BE_PageSize,\r\n                                                        })}\r\n                                                        onClick={(e) => this.handleChangePageSize(e, 'BE')}\r\n                                                    >\r\n                                                        {button}\r\n                                                    </Button>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <TechnologyList\r\n                                    technologyListID={`js-library-list-BE-${productInfo?.id}`}\r\n                                    draggable\r\n                                    label=\"thư viện BE\"\r\n                                    type=\"LIBRARY\"\r\n                                    keyprop=\"LI\"\r\n                                    side=\"BE\"\r\n                                    productId={productInfo?.id}\r\n                                    technologyList={BE_LibraryList_SortedOrNot}\r\n                                    // =================================================================\r\n                                    // CRUD BE Library List\r\n                                    onCreateTechnology={this.props.onCreateTechnology}\r\n                                    onUpdateTechnology={this.props.onUpdateTechnology}\r\n                                    onDeleteTechnology={this.props.onDeleteTechnology}\r\n                                    // =================================================================\r\n                                    // Search - Sort\r\n                                    isSearch={this.state.BE_isSearch}\r\n                                    isSortBy={this.state.BE_sortBy}\r\n                                />\r\n\r\n                                {!this.state.BE_isSearch && this.state.BE_isPagination && (\r\n                                    <div className={cx('pagination-container')}>\r\n                                        <Pagination\r\n                                            count={BETotalPage}\r\n                                            variant=\"outlined\"\r\n                                            size=\"medium\"\r\n                                            siblingCount={1}\r\n                                            boundaryCount={1}\r\n                                            page={this.state.BE_Page}\r\n                                            sx={{\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root': {\r\n                                                    color: 'var(--primary-color)',\r\n                                                    fontSize: '12px',\r\n                                                    borderColor: 'var(--green-color-02)',\r\n                                                },\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root:hover': {\r\n                                                    backgroundColor: 'var(--button-bgc-green-02)',\r\n                                                },\r\n\r\n                                                '& .css-lqq3n7-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected':\r\n                                                    {\r\n                                                        color: '#fff',\r\n                                                        backgroundColor: 'var(--button-bgc-green-01)',\r\n                                                    },\r\n\r\n                                                '& .Mui-selected:hover': {\r\n                                                    backgroundColor: 'var(--button-bgc-green-01) !important',\r\n                                                },\r\n                                            }}\r\n                                            onChange={(e, value) => this.handleChangePage(e, value, 'BE')}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","D:\\myProject\\cvonline.com\\React\\src\\components\\Button\\Button.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\Signup.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\Signin.js",[],"D:\\myProject\\cvonline.com\\React\\src\\containers\\Header\\Header.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Modal\\Modal.js",[],"D:\\myProject\\cvonline.com\\React\\src\\utils\\CommonUtils.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\AuthLayout\\Components\\FacebookGoogle.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\userActions.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\TechnologyList.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\EditProduct.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\CropImage\\CropImage.js",[],"D:\\myProject\\cvonline.com\\React\\src\\containers\\Header\\SearchBar.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\formValidation\\formValidation.js",["207","208"],"const Validator = (options, invalid, fetchData) => {\r\n    let selectorRules = {};\r\n\r\n    // Function is to get form-group\r\n    function getParent(inputElement, formGroupSelector) {\r\n        while (inputElement.parentElement) {\r\n            if (inputElement.parentElement.matches(formGroupSelector)) {\r\n                return inputElement.parentElement;\r\n            }\r\n            inputElement = inputElement.parentElement;\r\n        }\r\n    }\r\n\r\n    // (For step 1.1.1) Function is to validate\r\n    function validate(inputElement, rule) {\r\n        let errorMessage;\r\n\r\n        let messageElement = getParent(inputElement, options.formGroupSelector).querySelector(options.messageSelector);\r\n\r\n        // Lấy ra các rules của selector\r\n        let rules = selectorRules[rule.selector];\r\n\r\n        for (var i = 0; i < rules.length; ++i) {\r\n            switch (inputElement.type) {\r\n                case 'radio':\r\n                case 'checkbox':\r\n                    errorMessage = rules[i](\r\n                        formElement.querySelector(rule.selector + ':checked')\r\n                    );\r\n                    break;\r\n                default:\r\n                    errorMessage = rules[i](inputElement.value);\r\n            }\r\n            if (errorMessage) break;\r\n        }\r\n\r\n        if (errorMessage) {\r\n            messageElement.innerText = errorMessage;\r\n            getParent(inputElement, options.formGroupSelector).classList.add(invalid);\r\n        } else {\r\n            messageElement.innerText = '';\r\n            getParent(inputElement, options.formGroupSelector).classList.remove(invalid);\r\n        }\r\n\r\n        return !errorMessage;\r\n    }\r\n\r\n    // Step 1: Get form element to validate\r\n    let formElement = document.querySelector(options.formSelector);\r\n    if (formElement) {\r\n        // Handle clicking button to submit form\r\n        formElement.onsubmit = function (e) {\r\n            e.preventDefault();\r\n\r\n            let isFormValid = true;\r\n\r\n            // Step 1.1 - Loop through each rule and validate\r\n            options.rules.forEach(function (rule) {\r\n                let isValid;\r\n                let inputElement = formElement.querySelector(rule.selector);\r\n                if (inputElement) {\r\n                    // Step 1.1.1 - Validate each input field\r\n                    isValid = validate(inputElement, rule);\r\n                }\r\n\r\n                if (!isValid) {\r\n                    isFormValid = false;\r\n                }\r\n            });\r\n\r\n            if (isFormValid) {\r\n                let enableInputs = formElement.querySelectorAll('[name]');\r\n                let formData = Array.from(enableInputs).reduce(function (values, input) {\r\n                    switch (input.type) {\r\n                        case 'radio':\r\n                            values[input.name] = formElement.querySelector(\r\n                                'input[name=\"' + input.name + '\"]:checked',\r\n                            ).value;\r\n                            break;\r\n                        case 'checkbox':\r\n                            if (!input.matches(':checked')) {\r\n                                values[input.name] = '';\r\n                                return values;\r\n                            }\r\n                            if (!Array.isArray(values[input.name])) {\r\n                                values[input.name] = [];\r\n                            }\r\n                            values[input.name].push(input.value);\r\n                            break;\r\n                        case 'file':\r\n                            values[input.name] = input.files;\r\n                            break;\r\n                        default:\r\n                            values[input.name] = input.value;\r\n                    }\r\n\r\n                    return values;\r\n                }, {});\r\n\r\n                fetchData(formData);\r\n            }\r\n        };\r\n\r\n        // Lặp qua mỗi rule và xử lý (lắng nghe sự kiện blur, input, ...)\r\n        options.rules.forEach(function (rule) {\r\n            // Lưu lại các rules cho mỗi input\r\n            if (Array.isArray(selectorRules[rule.selector])) {\r\n                selectorRules[rule.selector].push(rule.test);\r\n            } else {\r\n                selectorRules[rule.selector] = [rule.test];\r\n            }\r\n\r\n            let inputElements = formElement.querySelectorAll(rule.selector);\r\n            \r\n            Array.from(inputElements).forEach(function (inputElement) {\r\n                // Xử lý trường hợp blur khỏi input\r\n                inputElement.onblur = function () {\r\n                    validate(inputElement, rule);\r\n                };\r\n\r\n                // Xử lý mỗi khi người dùng nhập vào input\r\n                inputElement.oninput = function () {\r\n                    let messageElement = getParent(inputElement, options.formGroupSelector).querySelector(\r\n                        options.messageSelector,\r\n                    );\r\n                    messageElement.innerText = '';\r\n                    getParent(inputElement, options.formGroupSelector).classList.remove(invalid);\r\n                };\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// Rule definitions\r\n// Principle of rules:\r\n// 1. There is an error => Return error message\r\n// 2. If valid => Returns nothing (undefined)\r\nValidator.isRequired = function (selector, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value ? undefined : message || 'Vui lòng nhập trường này';\r\n        },\r\n    };\r\n};\r\n\r\nValidator.isEmail = function (selector, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            let regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            return regex.test(value) ? undefined : message || 'Trường này phải là email';\r\n        },\r\n    };\r\n};\r\n\r\nValidator.minLength = function (selector, min, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value.length >= min ? undefined : message || `Vui lòng nhập tối thiểu ${min} kí tự`;\r\n        },\r\n    };\r\n};\r\n\r\nValidator.isConfirmed = function (selector, getConfirmValue, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value === getConfirmValue() ? undefined : message || 'Mật khẩu nhập lại không chính xác';\r\n        },\r\n    };\r\n};\r\n\r\nexport default Validator;\r\n","D:\\myProject\\cvonline.com\\React\\src\\components\\Popover\\Menu\\Menu.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Popover\\Menu\\MenuData.js",[],"D:\\myProject\\cvonline.com\\React\\src\\store\\actions\\index.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\CreateEditTechnology.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Image\\CropImage\\getCroppedImg.js",[],"D:\\myProject\\cvonline.com\\React\\src\\layouts\\PersonalLayout\\Components\\Technology.js",[],"D:\\myProject\\cvonline.com\\React\\src\\services\\index.js",[],"D:\\myProject\\cvonline.com\\React\\src\\components\\Button\\EditButton.js",[],"D:\\myProject\\cvonline.com\\React\\src\\services\\userService.js",[],"D:\\myProject\\cvonline.com\\React\\src\\config\\axios.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":35},{"ruleId":"213","severity":1,"message":"217","line":19,"column":7,"nodeType":"215","messageId":"216","endLine":19,"endColumn":23},{"ruleId":"213","severity":1,"message":"218","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":16},{"ruleId":"213","severity":1,"message":"219","line":24,"column":10,"nodeType":"215","messageId":"216","endLine":24,"endColumn":18},{"ruleId":"213","severity":1,"message":"220","line":94,"column":15,"nodeType":"215","messageId":"216","endLine":94,"endColumn":25},{"ruleId":"213","severity":1,"message":"221","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":151,"column":32,"nodeType":"224","messageId":"225","endLine":151,"endColumn":33,"suggestions":"226"},{"ruleId":"222","severity":1,"message":"223","line":151,"column":48,"nodeType":"224","messageId":"225","endLine":151,"endColumn":49,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'createStateSyncMiddleware' is defined but never used.","Identifier","unusedVar","'composeEnhancers' is assigned a value but never used.","'Markdown' is defined but never used.","'override' is defined but never used.","'paragraphs' is assigned a value but never used.","'HiOutlineSearch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["230","231"],["232","233"],"no-global-assign","no-unsafe-negation",{"messageId":"234","fix":"235","desc":"236"},{"messageId":"237","fix":"238","desc":"239"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"237","fix":"241","desc":"239"},"removeEscape",{"range":"242","text":"243"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"244","text":"245"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"246","text":"243"},{"range":"247","text":"245"},[5677,5678],"",[5677,5677],"\\",[5693,5694],[5693,5693]]